{"name":"Gdns","tagline":"a dns proxy server write by go","body":"# gdns\r\na dns proxy server write by go\r\n\r\ngdns much like dnsmasq or chinadns, but it can run on windows.\r\n\r\nFeatures\r\n========\r\n\r\nsupport different domains use different upstream dns servers\r\n\r\nsupport contact to the upstream dns server by tcp or udp\r\n\r\nsupport blacklist list to block the fake ip\r\n\r\nInstall\r\n=======\r\n\r\n```bash\r\n# get the depended library\r\ngo get github.com/miekg/dns\r\ngo get github.com/vharitonsky/iniflags\r\n    \r\ngit clone https://github.com/fangdingjun/gdns\r\ncd gdns\r\ngo build\r\n    \r\n# generate a sample config file\r\n./gdns -dumpflags > dns.ini\r\n    \r\n# edit the dns.ini and run, need root privileges to bind on port 53\r\nsudo ./gdns -config dns.ini\r\n    \r\n# test it\r\ndig @localhost twitter.com\r\n```\r\n\r\nArguments\r\n===========\r\n\r\nuse `gdns -h` to show the command line arguments.\r\n\r\nall arguments can specialed in config file or in command line.\r\n\r\nthere is a sample file in the `config_sample/` directory.\r\n\r\nThird-part library\r\n==================\r\nuse \r\n[dns](https://github.com/miekg/dns)\r\nlibrary to parse the dns message\r\n\r\nuse\r\n[iniflags](https://github.com/vharitonsky/iniflags)\r\nlibrary to process the command line arguments and the config file\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}